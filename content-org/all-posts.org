#+setupfile: setup.org
#+hugo_section: post
#+seq_todo: TODO DRAFT DONE
#+hugo_front_matter_key_replace: lastmod>mylastmod
#+macro: unsplash @@hugo:{{< unsplash leading="$1" id="$2" name="$3" >}}@@
#+macro: pixabay @@hugo:{{< pixabay >}}$1{{< /pixabay >}}@@
#+macro: pexels @@hugo:{{< pexels leading="$1" id="$2" name="$3">}}@@
#+macro: lastmod @@hugo:{{< lastmod >}}@@

* Inbox                                                             :@未分類:
  :LOGBOOK:
  :END:

** DRAFT 無料でいい感じのバナー用背景素材をダウンロード出来るサービス3選 :ATTACH:
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-13
:DIR:                images/2020-01-13_unsplash-pexels-pixabay
:EXPORT_HUGO_BUNDLE: 2020-01-13_unsplash-pexels-pixabay
:EXPORT_HUGO_SLUG:   unsplash-pexels-pixabay
:END:

順不動。

*** Unsplash

[[https://www.notion.so/][Notion]] のカバーイメージ選択欄にあったので存在を知った。

#+DOWNLOADED: file:/Users/yewton/Downloads/ash-edmonds-0aWZdK8nK2I-unsplash.jpg @ 2020-01-13 11:43:22
#+ATTR_ORG: :width 500
[[file:images/2020-01-13_unsplash-pexels-pixabay/2020-01-13_11-43-22_ash-edmonds-0aWZdK8nK2I-unsplash.jpg]]
{{{unsplash(Image by,badashphotos,Ash Edmonds)}}}

#+DOWNLOADED: file:/Users/yewton/Downloads/abstract-architecture-building-exterior-geometric-593158.jpg @ 2020-01-13 11:46:07
#+ATTR_ORG: :width 500
[[file:images/2020-01-13_unsplash-pexels-pixabay/2020-01-13_11-46-07_abstract-architecture-building-exterior-geometric-593158.jpg]]
{{{pexels(Photo by,scottwebb,Webb from Pexels)}}}

{{{pixabay(Featured image by <a href="https://pixabay.com/users/Sambeetarts-1339110/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1732847">Sambeet D</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1732847">Pixabay</a>)}}}

** DRAFT Emacs の info の使い方いつも忘れる
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-10
:DIR:                images/2020-01-10_emacs-info
:EXPORT_HUGO_BUNDLE: 2020-01-10_emacs-info
:EXPORT_HUGO_SLUG:   emacs-info
:END:

** DRAFT ox-hugo alias
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-10
:DIR:                images/2020-01-10_hugo-aliases
:EXPORT_HUGO_BUNDLE: 2020-01-10_hugo-aliases
:EXPORT_HUGO_SLUG:   hugo-aliases
:END:

#+begin_example
:EXPORT_HUGO_ALIASES: /2019/01/happy-new-year/
#+end_example


** DRAFT hugo-academic のデフォが removePathAccents=true な注意
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-10
:DIR:                images/2020-01-10_hugo-academic-dakuten
:EXPORT_HUGO_BUNDLE: 2020-01-10_hugo-academic-dakuten
:EXPORT_HUGO_SLUG:   hugo-academic-dakuten
:END:

サーチコンソール
ゲーム感想 → ケーム感想になってた

** DRAFT org-mode で祝日とか
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-10
:DIR:                images/2020-01-10_org-mode-holidays-anniversaries
:EXPORT_HUGO_BUNDLE: 2020-01-10_org-mode-holidays-anniversaries
:EXPORT_HUGO_SLUG:   org-mode-holidays-anniversaries
:END:

#+begin_src org
  ,* 記念日 
  ,#+CATEGORY: omochi
  %%(org-date 2020 1 8) omochi 記念日
  %%(diary-anniversary 1 8 2019) omochi %d 歳記念日
#+end_src


** DRAFT ox-hugo の src block caption はどこから来てるのか
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-10
:DIR:                images/2020-01-10_ox-hugo-src-block-caption
:EXPORT_HUGO_BUNDLE: 2020-01-10_ox-hugo-src-block-caption
:EXPORT_HUGO_SLUG:   ox-hugo-src-block-caption
:END:

[[file:~/.emacs.d/var/el-get/org-mode/lisp/ox.el::("Listing" ("ar" :default "برنامج") ("cs" :default "Program") ("da" :default "Program") ("de" :default "Programmlisting") ("es" :default "Listado de programa") ("et" :default "Loend") ("fr" :default "Programme" :html "Programme") ("it" :default "Listato") ("ja" :default "ソースコード")][koko]]

** DRAFT org-mode column view で clock した結果を集計
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-09
:DIR:                images/2020-01-09_columns-clocksum
:EXPORT_HUGO_BUNDLE: 2020-01-09_columns-clocksum
:EXPORT_HUGO_SLUG:   columns-clocksum
:END:

#+begin_src org
#+COLUMNS:  %40ITEM %TODO %CLOCKSUM %JIRA
#+end_src

* 雑記                                                                :@雑記:
:PROPERTIES:
:END:

** DONE 久々の更新                                      :emacs:hugo:ox_hugo:
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_BUNDLE: 2020-01-02_happy_new_year
:EXPORT_HUGO_SLUG: happy-new-year
:EXPORT_DATE: 2020-01-02
:EXPORT_HUGO_ALIASES: /2019/01/happy-new-year/
:END:

最近仕事用のmacを新調して環境を作り直す機会があったことと、 2020 年が始まるということもあり、久々にサイトを更新することにした。

[[/cv/][オープン職務経歴書]]を書きたかった、というのもある。

更新にあたっていくつか困難があった。

*まず、このサイトのソースが最近の Hugo では動かせなくなっていた。*

このサイトのテーマには [[https://github.com/digitalcraftsman/hugo-icarus-theme][Icarus]] を使わせていただいているのだが、最終更新が 2017 年となっており、
Hugo 0.55.0 以降で動かなくなってしまっていたり、 Deprecated Warning が出るようになっていた。

[[https://github.com/digitalcraftsman/hugo-icarus-theme/pull/124][PRは出されている]] のだけれど、マージされる様子が無い。

そもそも、当時のバージョンに対してカスタマイズしたレイアウトを作ってしまったので、
単純なテーマの更新だけでは追随できない。

どのバージョンなら動くのか突き止めるのも骨が折れた。
[[https://bitbucket.org/mgladdish/asdf-gohugo][asdf-gohugo]] を入れて、少しずつバージョンを上げながら確認していった。

#+begin_src sh
asdf plugin add hugo https://bitbucket.org/mgladdish/asdf-gohugo
#+end_src

*そして、そもそも Hugo の使い方を忘れていた。*

[[/2016/02/02/blog-with-hugo/][Hugo 導入記事]] や [[/2016/01/26/hugo-el/][Hugo 用 Emacs ライブラリ]] を書いておいてなんだが、当時から3年も経ってほとんど忘れてしまっていた。

そこで改めて調べてみると、イマドキは org-mode で書くことも出来るらしい。

この3年ですっかり org-mode 無しでは生きられない体になってしまっていたし、
せっかくなので本記事からは [[https://ox-hugo.scripter.co/][ox-hugo]] を使って書くことにする。

使い始めるにあたって色々調べたり考えたりすることも多かったので、そのうち記事にしようと思う。
結論としては、org-mode と Hugo の組み合わせは最高だし、その橋渡しをしてくれる [[https://ox-hugo.scripter.co/][ox-hugo]] は本当にグッジョブだということ。

...

そんなこんなで色々対応していたものの、デプロイする仕組みなどは当時と変わりなく動いたのでその点は助かった。

org-mode で書けるようになったことだし、少しは記事を書いていきたい所だが、まずは Hugo の最新版に追従する作業が待っている…。

** DONE #MadeWithAcademic                                 :academic:ox_hugo:
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: 2020-01-06_academic
:EXPORT_HUGO_SLUG: made-with-academic
:EXPORT_FILE_NAME: index
:EXPORT_DATE: 2020-01-06
:EXPORT_HUGO_ALIASES: /2019/01/made-with-academic/
:END:

[[https://github.com/digitalcraftsman/hugo-icarus-theme][Icarus]] がメンテされておらず Hugo 0.55.0 以降で正しく動かなくなっていたので、
自力で Icarus にパッチを充てるか、別のテーマに乗り換えるかという選択を迫られていた。

せっかくなのでランディングページとブログを別にしたかったので、そういう柔軟性を備えている
[[https://sourcethemes.com/academic/][Academic]] というテーマを使うことにした。

テーマの変更にあたって様々な知見が得られたので、そのうち記事にしたい。

以下その候補:

- [[https://gohugo.io/content-management/page-bundles/][Page Bundles]] への移行
- [[https://ox-hugo.scripter.co/doc/why-ox-hugo/][ox-hugo]] と Academic が如何に相性がよいか
  - auto weight あたりが最高
  - =lastmod= の自動更新や [[https://ox-hugo.scripter.co/doc/custom-front-matter/#front-matter-extra][Front-matter Extra]] は Academic じゃなても最高の体験
- カスタムウィジェットの作り方
- ダークテーマ対応のシンタックスハイライトのやりかた
- conf-toml-mode を [[https://ox-hugo.scripter.co/doc/custom-front-matter/#front-matter-extra][Front-matter Extra]] で使う方法

** DRAFT 久々の更新2                                    :emacs:hugo:ox_hugo:
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_BUNDLE: 2020-01-05_random
:EXPORT_HUGO_SLUG: random
:EXPORT_DATE: 2019-01-05
:END:

org-mode ではタグにハイフンを付けられない。

=ox_hugo= ~hoge~

conf-toml がある https://github.com/dryman/toml-mode.el/issues/14

#+begin_src emacs-lisp
(use-package ox-hugo
  :after ox
  :init
  (defalias 'toml-mode 'conf-toml-mode)
  :config 
  (setq org-hugo-use-code-for-kbd t))
#+end_src

#+begin_src sh
hugo gen chromastyles --style=monokai > pbcopy
hugo gen chromastyles --style=monokailight > pbcopy
#+end_src

https://css2sass.herokuapp.com/

=.np= とか、light にしか無いやつを消した(暫定)

https://gohugo.io/getting-started/configuration-markup#highlight

#+begin_src toml
  [markup.highlight]
    codeFences = true
    guessSyntax = false
    hl_Lines = ""
    lineNoStart = 1
    lineNos = false
    lineNumbersInTable = true
    noClasses = false
    style = "emacs"
    tabWidth = 4
#+end_src

https://github.com/sourcethemes/academic-scripts に page bunlde 化するスクリプトがある。

#+begin_src sh
asdf plugin add hugo https://github.com/beardix/asdf-hugo
#+end_src

=baseurl= を設定しないと Twitter Card などが表示されないので気をつけよう

#+begin_src toml
# The URL of your site.
# End your URL with a `/` trailing slash, e.g. `https://example.com/`.
baseurl = "https://www.yewton.net/"
#+end_src

=google_tag_manager= が設定されていると Google Analytics のコードが埋め込まれない
https://spectrum.chat/academic/help/google-analytics-not-working-for-me~3e802803-663f-4b38-8d6f-bc645935da26?authed=true

* 買ったモノ                                                    :@買ったモノ:
** DONE Lenovo Tab M8 が案外良かった                       :Lenovo__Tab__M8:
:PROPERTIES:
:EXPORT_FILE_NAME: index
:EXPORT_HUGO_BUNDLE: 2020-01-08_lenovo-tab-m8
:EXPORT_HUGO_SLUG: lenovo-tab-m8
:EXPORT_DATE: 2020-01-11
:DIR:      images/2020-01-08_lenovo-tab-m8
:END:

{{{lastmod}}}

さすがにもう [[/2017/04/09/grouper-beanstalk/][Nexus 7 2012]] でやっていくのはしんどくなってきたので、手軽なタブレットを探していたら、
2019 年の 11 月に Lenovo から [[https://hb.afl.rakuten.co.jp/hgc/1a0d625b.bdb81d38.1a0d625c.bf0332b2/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Fbiccamera%2F4580550700484%2F&m=http%3A%2F%2Fm.rakuten.co.jp%2Fbiccamera%2Fi%2F12780179%2F&link_type=hybrid_url&ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MCwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjB9][Lenovo Tab M8 (ZA5G0084JP)]] が発売されていたのを知った。

2 万を切る価格で、 Android 9 、クアッドコアでメモリは 2 GB 、
ディスプレイは 8.0 型ワイド IPS パネル (1280x800ドット)と、そこそこ使えそうなスペック。

ただストレージは 16GB と心許ないので、 microSD による拡張は必須(最大128GBまで)。
自分はたまたま持ってた [[https://amzn.to/2QJFCF8][SanDisk 製の microSDXC カード]] を使っている。
アプリ最適化対応じゃないので少々もっさりはするけれど、使えない程ではない。 

電子書籍が読めればいいやというくらいの気持ちで購入したのだけれど、意外なことに *音がいい* 。

確かに [[https://www.lenovo.com/jp/ja/tablets/android-tablets/tab-series/Lenovo-Tab-M8-2nd-Gen-HD/p/ZZITZTATB58][公式サイト]] には以下のようにあるけれども、正直期待していなかった。

#+begin_quote
鮮やかでシームレスな映像表示を実現する狭額縁による高画面占有率83％のマルチタッチ対応の8.0型ワイドIPSパネル、ドルビーオーディオ対応のオーディオ機能を搭載。鮮明な映像と臨場感のあるサウンドで、お気に入りのビデオのストリーミングやモバイルゲームを楽しめます。
#+end_quote

[[https://amzn.to/2T4dbTB][Sony WH-XB900N]] を Bluetooth 接続で聴いているが、手持ちの Pixel 3 XL に繋いだ場合と比較すると結構違う。
そんなに大した耳を持ってるわけじゃないけど、低音がすごく心地良く響く感じ。

イコライザは以下のように設定している:

#+DOWNLOADED: file:/Users/yewton/Downloads/drive-download-20200107T213252Z-001/Screenshot_2020-01-08-01-02-47-757.jpeg @ 2020-01-09 06:10:17
#+ATTR_ORG: :width 500
#+CAPTION: Dolby Audio のイコライザ設定
[[file:images/2020-01-08_lenovo-tab-m8/2020-01-09_06-10-17_Screenshot_2020-01-08-01-02-47-757.jpeg]]

意外と音が良いので色々やりたくなってしまい、年末にセールしていた [[https://play.google.com/store/apps/details?id=com.square_enix.android_googleplay.FFT_jp2&hl=ja][FINAL FANTASY TACTICS 獅子戦争]] を買ってしまった。
割と快適に動くので読書よりもゲームをやってしまう…。

#+DOWNLOADED: file:/Users/yewton/Downloads/drive-download-20200107T213252Z-001/Screenshot (2020_01_08 6_12_13).jpg @ 2020-01-09 08:36:49
#+ATTR_ORG: :width 500
#+CAPTION: いつまでもゼクラス砂漠から出られない一行
[[file:images/2020-01-08_lenovo-tab-m8/2020-01-09_08-36-49_Screenshot (2020_01_08 6_12_13).jpg]]

そんなわけで案外良かった Lenovo Tab M8 だがおかしな挙動もあり、
まず *再起動すると必ず「SDカードが見つからない」旨の通知が表示される* 。

そして、 *スクリーンショットの動作が安定しない* 。上記の現象もスクリーンショットが保存できなかった。

一番うっとうしいのが、 *横画面になる度に Lenovo Launcher が停止する* こと。停止する度にダイアログが出るので邪魔。
とはいえ「アプリを閉じる」を選択してしまえば以降差し支えなく使用は可能。

#+ATTR_ORG: :width 600
#+CAPTION: 横画面になる度に表示されるうっとうしいダイアログ
[[file:images/2020-01-08_lenovo-tab-m8/2020-01-08_06-36-20_Screenshot_2020-01-08-01-02-37-802.jpeg]]

{{{unsplash(Featured image background by, estherrj, Esther Jiao)}}}

* Emacs                                                              :@Emacs:
** DONE org-mode に Chrome で開いてるページへのリンクを貼りたい :emacs:org__mode:
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-10
:DIR:                images/2020-01-09_org-mode-web-link
:EXPORT_HUGO_BUNDLE: 2020-01-09_org-mode-web-link
:EXPORT_HUGO_SLUG:   org-mode-web-link
:END:

=org-mode= のリンクマークアップはちょっと特殊で、エスケープの仕様も独特です。

また、  [[https://code.orgmode.org/bzg/org-mode/src/release_9.3/etc/ORG-NEWS][2019年の12月にリリースされたバージョン 9.3 で後方互換性の無い仕様変更が入る]] ということも有りました。

#+begin_quote
*Version 9.3*

*Incompatible changes*

Change bracket link escaping syntax
Org used to percent-encode sensitive characters in the URI part of the bracket links.

Now, escaping mechanism uses the usual backslash character, according to the following rules, applied in order:
#+end_quote

#+CAPTION[short]: (参考) =org-mode= 9.3 でのエスケープ実装
#+begin_src emacs-lisp
(defun org-link-unescape (link)
  "Remove escaping backslash characters from string LINK."
  (replace-regexp-in-string
   (rx (group (one-or-more "\\")) (or string-end (any "[]")))
   (lambda (_)
     (concat (make-string (/ (- (match-end 1) (match-beginning 1)) 2) ?\\)))
   link nil t 1))
#+end_src

こういう背景もあり、 =org-mode= の外で工夫して =org-mode= 形式のリンクを生成するよりは、
 =org-mode= 自体に任せてしまうのが安心です。

[[https://github.com/rexim/org-cliplink][org-cliplink]] というパッケージもありますが、これだとログインが必要なページへのリンクは
(Basic 認証を設定していなければ)生成出来ません。

もっと手軽に、 Chrome で見ているページへのリンクを挿入する手段として、
[[https://github.com/ku/CreateLink][CreateLink]] という Chrome 拡張機能を使う方法があります。

以下のように改行区切りでコピーするような設定を追加します:

#+begin_example
%text%%newline%%url%
#+end_example

CreateLink の =%text%= は改行をスペースに変換する仕様になっているので、区切り文字として改行を利用するのは安全なハズです。

そして、以下のような独自関数を定義します:

#+begin_src emacs-lisp
  (require 's)

  (defun ytn-org-insert-weblink ()
    (interactive)
    (let* ((pair (s-split "\n" (with-temp-buffer (clipboard-yank) (buffer-string))))
           (desc (first pair))
           (link (second pair)))
      (insert (org-make-link-string link desc))))
#+end_src

単純に改行で区切って =org-make-link-string= に渡すだけです。

これを、個人的には ~M-L~ にアサインしています([[https://github.com/jwiegley/use-package][use-package]] の =bind-key= を利用しています):

#+begin_src emacs-lisp
(bind-key "M-L" #'ytn-org-insert-weblink org-mode-map)
#+end_src

以上、ちょっとした小ネタでした。

** DRAFT auto-commit-and-push のこと書きたい
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-09
:DIR:                images/2020-01-09_auto-commit-and-push
:EXPORT_HUGO_BUNDLE: 2020-01-09_auto-commit-and-push
:EXPORT_HUGO_SLUG:   auto-commit-and-push
:END:

#+CAPTION: .dir-locals.el
#+begin_src emacs-lisp
((nil . ((eval git-auto-commit-mode 1)
         (gac-automatically-push-p . t))))
#+end_src

=git-auto-commit-mode= は autoload されるので、 autoload が適切に扱われていれば =require= は不要。

** DRAFT org-download と ox-hugo を組み合わせて記事への画像挿入を快適にする :emacs:ox__hugo:org__download:org__attach:
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-09
:DIR:                images/2020-01-09_org-download-ox-hugo
:EXPORT_HUGO_BUNDLE: 2020-01-09_org-download-ox-hugo
:EXPORT_HUGO_SLUG:   org-download-ox-hugo
:END:

#+begin_src emacs-lisp
(use-package org-download
  :after org
  :functions (org-link-escape)
  :config
  (setq org-download-method 'attach)
  (setq org-download-link-format-function
        (lambda (filename)
          (format org-download-link-format
                  (org-link-escape
                   (funcall org-download-abbreviate-filename-function filename)))))
  (setq org-download-annotate-function
        (lambda (link)
          (format "#+DOWNLOADED: %s @ %s\n#+ATTR_ORG: :width 500\n"
                  (if (equal link org-download-screenshot-file)
                      "screenshot"
                    link)
                  (format-time-string "%Y-%m-%d %H:%M:%S"))))
  (add-hook 'dired-mode-hook 'org-download-enable))
#+end_src

** DRAFT Emacs で文字列補間(String interpolation)したい
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-09
:DIR:                images/2020-01-09_s-lex-format
:EXPORT_HUGO_BUNDLE: 2020-01-09_s-lex-format
:EXPORT_HUGO_SLUG:   s-lex-format
:EXPORT_HUGO_TAGS: s.el emacs
:END:

https://emacs.stackexchange.com/questions/7377/named-string-substitution

** DRAFT Emacs でマジックコメントを反映させたいとき
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-09
:DIR:                images/2020-01-09_find-alternate-file
:EXPORT_HUGO_BUNDLE: 2020-01-09_find-alternate-file
:EXPORT_HUGO_SLUG:   find-alternate-file
:END:

#+begin_src emacs-lisp
;; -*- lexical-binding: t; -*-
#+end_src

#+begin_src emacs-lisp
;; Local Variables:
;; flycheck-disabled-checkers: (emacs-lisp emacs-lisp-checkdoc)
;; no-byte-compile: t
;; End:
#+end_src

=find-alternate-file=

#+begin_quote
Find file /FILENAME/, select its buffer, kill previous buffer.
If the current buffer now contains an empty file that you just visited
(presumably by mistake), use this command to visit the file you really want.
#+end_quote

https://superuser.com/questions/208488/how-do-i-re-open-a-file-in-emacs

** DRAFT emacs-plus で入れた Emacs が Spotlight 検索に引っかからない :emacs:spotlight:
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-09
:DIR:                images/2020-01-09_emacs-plus-spotlight
:EXPORT_HUGO_BUNDLE: 2020-01-09_emacs-plus-spotlight
:EXPORT_HUGO_SLUG:   emacs-plus-spotlight
:END:

https://qiita.com/delphinus/items/438046d2bbeb3e63f8fa


# Local Variables:
# org-attach-auto-tag: nil
# End:

* Webサイト運用                                               :Webサイト運用:
** DRAFT GitHub Pages + Cloudflare から Netlify に移行した
:PROPERTIES:
:EXPORT_FILE_NAME:   index
:EXPORT_DATE:        2020-01-13
:DIR:                images/2020-01-13_hugo-netlify
:EXPORT_HUGO_BUNDLE: 2020-01-13_hugo-netlify
:EXPORT_HUGO_SLUG:   hugo-netlify
:END:

[[/2016/02/02/blog-with-hugo/][この記事にあるとおり]] 、当初このサイトは GitHub Pages でホストされ、
Cloudflare CDN を利用して配信していた。



{{{pixabay(Featured image background by <a href="https://pixabay.com/users/PIRO4D-2707530/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1687319">PIRO4D</a> from <a href="https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1687319">Pixabay</a>)}}}

